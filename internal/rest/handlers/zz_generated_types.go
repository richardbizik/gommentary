// Package handlers provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package handlers

import (
	"time"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Comment defines model for Comment.
type Comment struct {
	// Author Author of the comment.
	Author *string `json:"author,omitempty"`

	// Date Date when comment was created.
	Date time.Time `json:"date"`

	// Edits Number of edits done to the comment.
	Edits int `json:"edits"`

	// Id The comment id.
	Id string `json:"id"`

	// Position Position of the comment in reply list.
	Position int `json:"position"`

	// Replies Number of replies to the comment.
	Replies int `json:"replies"`

	// Text Text of the comment.
	Text string `json:"text"`
}

// CommentHistory defines model for CommentHistory.
type CommentHistory struct {
	// Date Date when comment was created.
	Date time.Time `json:"date"`

	// Text Text of the comment.
	Text string `json:"text"`
}

// CommentHistoryPage defines model for CommentHistoryPage.
type CommentHistoryPage struct {
	Comment       CommentSimple    `json:"comment"`
	Content       []CommentHistory `json:"content"`
	First         bool             `json:"first"`
	Last          bool             `json:"last"`
	Size          int              `json:"size"`
	TotalElements int64            `json:"totalElements"`
	TotalPages    int              `json:"totalPages"`
}

// CommentSimple defines model for CommentSimple.
type CommentSimple struct {
	// Author Author of the comment.
	Author *string `json:"author,omitempty"`

	// Date Date when comment was created.
	Date time.Time `json:"date"`

	// Id The comment id.
	Id string `json:"id"`

	// Text Text of the comment.
	Text string `json:"text"`
}

// CommentsPage defines model for CommentsPage.
type CommentsPage struct {
	Content       []Comment `json:"content"`
	First         bool      `json:"first"`
	Last          bool      `json:"last"`
	Size          int       `json:"size"`
	Subject       Subject   `json:"subject"`
	TotalElements int64     `json:"totalElements"`
	TotalPages    int       `json:"totalPages"`
}

// CreateComment defines model for CreateComment.
type CreateComment struct {
	// SubjectName Name of the subject
	SubjectName *string `json:"subjectName,omitempty"`

	// Text Text of the comment
	Text string `json:"text"`
}

// EditComment defines model for EditComment.
type EditComment struct {
	// Text Text of the comment
	Text string `json:"text"`
}

// Error defines model for Error.
type Error struct {
	// Code Error code.
	Code string `json:"code"`

	// Message A detailed message of the error.
	Message string `json:"message"`

	// Severity An exception class indicating the occurred error.
	Severity string `json:"severity"`
}

// Page defines model for Page.
type Page struct {
	First         bool  `json:"first"`
	Last          bool  `json:"last"`
	Size          int   `json:"size"`
	TotalElements int64 `json:"totalElements"`
	TotalPages    int   `json:"totalPages"`
}

// Subject defines model for Subject.
type Subject struct {
	// Id Id of the subject that the comment belongs to.
	Id string `json:"id"`

	// Name Name of the subject that the comment belongs to.
	Name *string `json:"name,omitempty"`
}

// GetCommentHistoryParams defines parameters for GetCommentHistory.
type GetCommentHistoryParams struct {
	// Size Return maximum of <limit> number of definitions. Default 20.
	Size *int `form:"size,omitempty" json:"size,omitempty"`

	// Page Page of the comments to retrieve (starts at 0).
	Page *int `form:"page,omitempty" json:"page,omitempty"`
}

// GetCommentsPageParams defines parameters for GetCommentsPage.
type GetCommentsPageParams struct {
	// Size Return maximum of <limit> number of definitions. Default 20.
	Size *int `form:"size,omitempty" json:"size,omitempty"`

	// Page Page of the comments to retrieve (starts at 0).
	Page *int `form:"page,omitempty" json:"page,omitempty"`
}

// EditCommentJSONRequestBody defines body for EditComment for application/json ContentType.
type EditCommentJSONRequestBody = EditComment

// CreateCommentJSONRequestBody defines body for CreateComment for application/json ContentType.
type CreateCommentJSONRequestBody = CreateComment
